	1.1 Background (Передумови)

	Одним із найважливіших аспектів сучасного життя є мобільність. Люди хочуть мати можливість швидко, безпечно та комфортно пересуватися з одного місця в інше. У цій динамічній реальності традиційні транспортні системи, такі як таксі, стикаються з численними викликами.
	Зростання кількості автомобілів на дорогах призводить до заторів, що збільшує час подорожі та викиди парникових газів. Традиційні таксі часто їздять порожніми, що робить їх неефективними та дорогими. Водії таксі можуть бути втомленими або неуважними, що може призвести до аварій. Таксі можуть бути недоступними в деяких районах або в певний час доби. А також, для багатьох людей поїздка на таксі може бути занадто дорогою.
	Ще однією проблемою для багатьох користувачів є комунікація з водієм та його поведінка під час поїздки, що може конфліктувати з бажаннями клієнта. Нав’язливі розмови, запах в салоні та музика, що не подобається (або взагалі її відсутність) може сильно вплинути на враження клієнта від поїздки. Також не виключається фактор непорозуміння на основи мови спілкування під час, наприклад, відряджень або туристичних поїздок.
	Одночасно з цим, штучний інтелект робить значні кроки вперед. Розробляються нові технології, які дозволяють машинам самостійно керувати транспортними засобами. У цій ситуації автономні транспортні засоби стають перспективним рішенням, що може значно змінити сферу пасажирських перевезень.
	Автономні таксі, керовані штучним інтелектом, мають потенціал значно знизити рівень забруднення повітря, покращити безпеку дорожнього руху, зробити пересування більш доступним та комфортним для людей з обмеженими можливостями, а також значно економити час та кошти пасажирів.

	1.2 Business Opportunity (Бізнес-можливості)
     
     Найбільшими конкурентами у цій галузі автономних перевезень є Waymo, Aurora Technologies та Pony.ai.
     Waymo самостійно виготовляють автономні машини та надають послуги перевезення клієнтам. Вони мають власну систему контролю автономних автомобілів, та надають користувачам відкритий безкоштовний мобільний застосунок, за допомогою якого можна замовляти поїздки, відстежувати їхній статус та в разі необхідності скасовувати поїздки. Компанія орієнтована тільки на ринок США, що обмежує можливості компанії для глобального розширення. Програмна система, розроблювана Waymo, досить близька до нашої, проте вона пропонує менший функціонал та можливості персоналізації поїздки. Отже, програмна система від Waymo не задовольняє потреби користувачів у зручності використання системи, доступності та персоналізації.
     Aurora Innovation також самостійно виготовляють автономні машини, проте не надають послуг перевезення. Їхня бізнес-модель зосереджена на співпрацю з іншими бізнесами, які хочуть інтегрувати автомобілі без водія у свої операції. Компанія не надає відкритого мобільного застосунку звичайним користувачам, а лише для внутрішніх потреб бізнесу, з яким співпрацює. Aurora Innovation орієнтовані на ринок США, що обмежує можливості глобального розширення. Система, розроблювана компанією, орієнтована на потреби бізнесу, а не звичайних користувачів. Отже, програмна система від Aurora Technologies не задовольняє потреби користувачів у безпеці перевезення, зручності використання системи, доступності та персоналізації.
     Pony.ai також самостійно виготовляють автономні машини та надають послуги перевезення клієнтам. Вони, як і Waymo, мають власну систему контролю автономних автомобілів, та надають користувачам відкритий безкоштовний мобільний застосунок, проте він доступний тільки у межах Китаю, оскільки компанія орієнтована саме китайський ринок. Це обмежує можливості компанії для глобального розширення. Програмна система, розроблювана Pony.ai, близька до нашої, проте вона пропонує менший функціонал та можливості персоналізації поїздки. Отже, програмна система від Pony.ai не задовольняє потреби користувачів у зручності використання системи, доступності та персоналізації.
     Зважаючи на системи конкурентів, можна виділити відмінності та переваги нашого проєкту:
* проєкт орієнтований на глобальний ринок;
* доступність автомобілів у будь-який день та час доби;
* можливість обрати найбільш задовільний автомобіль з доступних за власними вподобаннями (кількість сидінь, розмір тощо);
* більшість конкурентів орієнтовані на ринок США, але наша система надаватиме послуги по всьому світу;
* користувачі зможуть здійснювати замовлення та моніторинг поїздки у реальному часі за допомогою відкритого мобільного застосунку;
* великі можливості персоналізації поїздки.
	Наша модель монетизації передбачає отримання прибутку завдяки наданню послуги перевезень клієнтам з динамічним ціноутворенням, що залежатиме від дистанції поїздки та попиту. Плата стягуватиметься за кожну поїздку клієнта.
	Клієнтами нашої програмної системи є люди, які потребують швидкого та безпечного перевезення з мінімальним ризиком аварій та без турбування з боку водія. Програмна система орієнтуватиметься на перевезення як у містах, так і за їхніми межами. Типовим клієнтом нашої системи є молода людина років 18-35, якій необхідно дістатися на роботу, додому або на відпочинок. Такому клієнту найбільш зручно буде викликати таксі за допомогою мобільного застосунку, у ньому отримувати всю необхідну інформацію про поїздку та маршрут, а також скористатися можливостями персоналізації.
	Цільовими ринками розроблюваної системи є:
* міста з високою щільністю населення;
* міста з проблемами заторів;
* міста з проблемами забруднення повітря.
	Підходами до маркетингу розроблюваної системи є:
* поширення інформації про систему через цифрові канали, такі як вебсайти, соціальні мережі та пошукова реклама, щоб охопити нашу цільову аудиторію;
* співпраця з виробниками автомобілів, транспортними компаніями та міськими владами, щоб просувати наш продукт;
* участь у громадських заходах для підвищення обізнаності про наш продукт.
Стратегіями просування розроблюваної системи є:
* безкоштовні пробні версії, щоб отримати початкові відгуки користувачів;
* програми лояльності, щоб заохочувати клієнтів до повторного використання нашого продукту;
* інформування користувачів про можливості персоналізації.

     2.1 Vision Statement (Окреслення концепції)

     Головна ідея проєкту полягає у створенні ефективної та автоматизованої системи для надання послуг перевезення клієнтів у мережі таксі. Система спрямована на точне керування мережею автономних таксі, що дозволить покращити якість обслуговування та забезпечити зручність для пасажирів.
     Продукт надасть можливість клієнтам легко та зручно замовляти таксі через мобільний застосунок або вебсайт, а адміністраторам – зручно налаштовувати та обслуговувати екосистему автомобілів через виділену панель адміністратора. Головна мета полягає у забезпеченні безпеки та комфорту під час поїздки, а також у вчасному та ефективному наданні послуг.
     Головною особливістю IoT частини проєкту є інтеграція спеціальних пристроїв у кожен транспортний засіб мережі таксі. Ці пристрої обладнані датчиками та модулями зв'язку, які забезпечують збір та передачу важливих даних на серверну частину системи. Основні функції IoT пристроїв включають: автономне керування транспортом, збір та відправлення даних про стан транспорту, обмін даними про маршрут та місцезнаходження.
     Основні переваги проєкту включають надання найбільш комфортної послуги перевезення та забезпечення безпеки під час поїздки, що допоможе забезпечити задоволення клієнтів та підвищити рівень довіри до системи. Використання штучного інтелекту та автономного керування також дозволить зменшити ризики дорожніх пригод та забезпечити безпеку під час поїздки.
     Оскільки однією з головних переваг системи є безпека, необхідно забезпечити високу безпеку даних користувачів. Всі дані, що передаються між клієнтською частиною (мобільний застосунок або вебсайт), IoT пристроями та серверною частиною системи, шифруються з використанням надійних протоколів шифрування. Для забезпечення доступу лише авторизованим користувачам до конфіденційної інформації використовуються механізми автентифікації та авторизації. Кожен користувач має свої унікальні облікові дані, і доступ до різних функціональних можливостей системи обмежується відповідно до їхніх ролей та прав доступу. Система постійно спостерігає за активністю користувачів та обміном даними, щоб виявляти будь-які підозрілі або неавторизовані дії. Звіти подій зберігаються та аналізуються для виявлення потенційних загроз безпеці даних.
     Впровадження програмної системи буде сприяти підвищенню ефективності та конкурентоспроможності бізнесу, а також забезпечить покращення якості обслуговування для клієнтів. Це стане важливим кроком у розвитку та оновленню транспортної індустрії, що відкриє нові можливості для підприємств і покращить їхнє ставлення на ринку перевезень.

     2.2 Major Features (Головна функціональність)

	MF-1: Створення замовлень: Користувачі можуть створювати замовлення на бажаний маршрут (заданий місцем відправлення та місцем прибуття) для обраного автомобіля.
	MF-2: Персоналізація поїздки: Користувачі можуть задати спеціальні умови поїздки, такі як: наявність голосового асистента, програвання музики, температура в салоні, місця зупинки по дорозі.
	MF-3: Моніторинг статусу та місцеположення автомобілів у реальному часі: Користувачі можуть в реальному часі спостерігати за місцезнаходженням та статусом автомобілів, що здійснюють перевезення.
	MF-4: Керування автомобілем: Користувачі можуть керувати відкриттям та закриттям дверей в автомобілі, початком або завершенням маршруту, зупинками під час поїздки.
	MF-5: Можливість дистанційного керування системою через мобільний застосунок або вебсайт: Користувачі можуть керувати системою та автомобілями з використанням мобільного застосунку або вебінтерфейсу.
	MF-6: Повідомлення користувачів про прибуття автомобіля, кількість пального, аварійні ситуації та закінчення поїздки: Система надсилає оповіщення користувачам на мобільний застосунок та вебсайт щодо статусу поїздки та можливих проблем з автомобілем.
	MF-7: Технічна підтримка користувачів для вирішення технічних питань та надання порад щодо використання системи: Користувачі зможуть отримати технічну підтримку у мобільного застосунку або на вебсайті для вирішення проблем з системою.
	MF-8: Багатомовний інтерфейс: Користувачі можуть користуватися застосунком англійською й українською мовами.

     3.1 Scope of Initial Release (Рамки первинного випуску)

	Серверна частина повинна включати:
* реєстрацію та авторизацію користувачів: реалізація системи користувачів та механізмів входу з підтримкою ролей та прав доступу;
* створення, редагування, перегляд автономних автомобілів: можливість внесення, редагування та перегляду інформації про автомобіль;
* створення, перегляд, оновлення, скасування поїздок: можливість внесення, оновлення, перегляду інформації про поїздки, а також їх скасування;
* керування поїздкою: можливість вибору спеціальних умови поїздки, такі як: наявність голосового асистента, програвання музики, температура в салоні, місця зупинки по дорозі;
* автоматична побудова маршруту поїздки: маршрут поїздки буде будуватися автоматично з використанням сервісів GPS-навігації;
* моніторинг автомобілів: збір та повернення інформації про статус та місцезнаходження автомобілів у реальному часі;
* сповіщення користувачів: відправлення сповіщень користувачам про прибуття автомобіля, кількість пального, аварійні ситуації та закінчення поїздки;
* керування автомобілем: керування відкриттям та закриттям дверей в автомобілі, початком або завершенням маршруту, зупинками під час поїздки;
* адміністрування системи: управління користувачами системи, управління  даними системи, створення резервних копій налаштувань та даних, експорт та імпорт даних та налаштувань, управління сертифікатами;
* захист від атак: використання сучасних методів захисту, такі як параметризовані запити SQL та валідація введених даних, для запобігання атакам SQL-ін'єкції та іншим формам вразливостей;
* шифрування даних: збереження конфіденційних даних, у зашифрованому вигляді, з використанням сучасних алгоритмів шифрування, таких як SHA256;
* механізми резервного копіювання та відновлення даних: наявність автоматизованих механізмів резервного копіювання, які регулярно зберігатимуть копії даних. У випадку аварійної ситуації, буде забезпечений швидкий відновлювальний процес з використанням збережених резервних копій;
* механізми синхронізації даних: використання стратегій обробки конфліктів даних, такі як "останній переможець" або "об'єднання", щоб уникнути втрати чи відтворення невідповідностей.
	IoT частина повинна включати:
* збір і відправлення даних: оновлення даних автомобілів (статус, місцезнаходження, переміщення, кількість палива) та їх відправлення на серверну частину;
* визначення маршруту: автомобіль отримуватиме  місцезнаходження точки прибуття та маршрут до неї завдяки запиту до серверної частини;
* програвання сигналів та аудіозаписів: звукові та світлові сигнали для привернення уваги користувачів, програвання аудіозаписів у салоні, голосовий асистент;
* реагування та повідомлення про загрози: сигналізація при спробі примусового проникнення в автомобіль та відправлення інформації про це на серверну частину;
* визначення місцезнаходження заправної станції: автомобіль отримуватиме найближче місцезнаходження заправної станції при низькій кількості палива, щоб вчасно поповнити запас;
* захист від вторгнень: захист від потенційних вторгнень за допомогою механізмів автентифікації та авторизації. Будуть використані сучасні методи шифрування, такі як SHA256, та обмеження доступу до системних ресурсів для запобігання несанкціонованому доступу до пристроїв;
* захист конфіденційності даних: всі дані, які збираються та відправляються IoT пристроями, будуть шифровані за допомогою методу шифрування TLS перед передачею на серверну частину.
	Front-end частина повинна включати:
* реєстрація та вхід користувачів: наявність механізмів для автентифікації та авторизації користувачів перед наданням доступу до функцій системи. Використовуватимуться безпечні методи аутентифікації, такі як JWT (JSON Web Token), для забезпечення безпеки процесу входу;
* створення, редагування, перегляд автомобілів: можливість внесення, редагування та перегляду інформації про автономні автомобілі;
* створення, перегляд, оновлення, скасування поїздок: можливість внесення, оновлення, перегляду інформації про поїздки, а також їх скасування;
* керування поїздкою: можливість вибору спеціальних умови поїздки, такі як: наявність голосового асистента, програвання музики, температура в салоні, місця зупинки по дорозі;
* панель адміністратора: панель, що дозволяє управління користувачами системи, управління  даними системи, створення резервних копій налаштувань та даних, експорт та імпорт даних та налаштувань, управління сертифікатами;
* локалізований та інтернаціоналізований інтерфейс: підтримка української та англійської мови, використання інтернаціональних кодових таблиць символів, локалізоване обчислення та формат дати та часу, підтримка локального та універсального часу, метричних одиниць вимірювання, англійських  та американських систем мір, порядку сортування текстових значень, різного напряму введення тексту;
* сповіщення користувачів: відправлення сповіщень користувачам про прибуття автомобіля, кількість пального, аварійні ситуації та закінчення поїздки;
* захист від XSS (Cross-Site Scripting) та CSRF (Cross-Site Request Forgery) атак: використання механізмів вбудованого захисту від XSS та CSRF атак для запобігання вразливостям, пов'язаним з введенням користувача;
* використання HTTPS протоколу: всі з'єднання між клієнтом та сервером будуть здійснюватися через HTTPS протокол для забезпечення шифрування даних під час передачі через мережу;
* валідація введених даних: використання механізмів валідації для перевірки введених користувачем даних перед їх відправленням на сервер, що допоможе уникнути вразливостей і некоректних операцій;
* моніторинг безпеки та реагування на загрози: буде реалізована система моніторингу захисту, яка виявлятиме та реагуватиме на можливі загрози безпеці. Це включатиме в себе виявлення надзвичайних подій, аналіз журналів подій та автоматичне сповіщення адміністраторів про потенційні атаки або вразливості.
	Мобільна частина повинна включати:
* реєстрація та вхід користувачів: наявність механізмів для автентифікації та авторизації користувачів перед наданням доступу до функцій системи. Використовуватимуться безпечні методи аутентифікації, такі як JWT (JSON Web Token), для забезпечення безпеки процесу входу;
* створення, редагування, перегляд автомобілів: можливість внесення, редагування та перегляду інформації про автономні автомобілі;
* створення, перегляд, оновлення, скасування поїздок: можливість внесення, оновлення, перегляду інформації про поїздки, а також їх скасування;
* керування поїздкою: можливість вибору спеціальних умови поїздки, такі як: наявність голосового асистента, програвання музики, температура в салоні, місця зупинки по дорозі;
* перегляд поїздки: перегляд інформації про конкретну поїздку та автомобіль, який її обслуговує;
* керування автомобілем: керування відкриттям та закриттям дверей в автомобілі, початком або завершенням маршруту, зупинками під час поїздки;
* сповіщення користувачів: відправлення сповіщень користувачам про прибуття автомобіля, кількість пального, аварійні ситуації та закінчення поїздки;
* локалізований та інтернаціоналізований інтерфейс: підтримка української та англійської мови, використання інтернаціональних кодових таблиць символів, локалізоване обчислення та формат дати та часу, підтримка локального та універсального часу, метричних одиниць вимірювання, англійських  та американських систем мір, порядку сортування текстових значень, різного напряму введення тексту;
* шифрування даних: усі дані, що передаються через мобільний застосунок, будуть шифруватися з використанням надійних алгоритмів шифрування, таких як TLS, для запобігання витоку конфіденційної інформації під час передачі через мережу;
* захист від несанкціонованого доступу: в мобільному застосунку будуть використовуватися механізми безпеки, такі як токени доступу та механізми перевірки доступу, для запобігання несанкціонованому доступу до особистої інформації користувачів та інших конфіденційних даних;
* моніторинг та збереження подій: мобільний застосунок буде відстежувати та зберігати події, пов'язані із взаємодією користувачів із системою, для виявлення та реагування на будь-які можливі загрози безпеці;
* захист від витоку даних: мобільний застосунок буде використовувати механізми захисту від витоку даних, такі як використання безпечного збереження та обробки конфіденційних даних на пристрої користувача, щоб запобігти несанкціонованому доступу до особистої інформації.

     3.2 Scope of Subsequent Releases (Рамки наступних випусків)

	Серверна частина може включати:
* відгуки про сервіс: можливість користувачам залишати відгуки про наш сервіс;
* аналітика та статистика: аналітика поїздок та переміщення автомобілів, надання звітів про роботу для користувачів та адміністраторів, відстеження продуктивності та ефективності поїздок.
	IoT частина може включати:
* переміщення завдяки штучному інтелекту: можливість автомобіля самостійно переміщуватися за заданим маршрутом, аналізуючи ситуацію на дорозі та оминаючи перешкоди;
* розширена система збереження палива: реалізація розумної системи керування паливом автомобілів.
	Front-end частина може включати:
* карта моніторингу автомобілів: відображення місцезнаходження автомобілів на мапі у режимі реального часу;
* перегляд аналітики та статистики: можливість перегляду аналітики поїздок та переміщення автомобілів, отримання звітів про роботу для користувачів та адміністраторів;
* відгуки про сервіс: можливість залишати відгуки про наш сервіс;
* пошук і фільтрація доступних автомобілів: реалізація пошуку та фільтрації доступних автомобілів за різними критеріями;
* підтримка платіжних систем: можливість оплати поїздки безпосередньо через застосунок.
	Мобільна частина може включати:
* геолокація та маршрутизація: можливість визначення місцезнаходження користувача та автоматичного визначення найближчих автомобілів для поїздки;
* підтримка платіжних систем: можливість оплати поїздки безпосередньо через застосунок.

     4.3 Operating Enviroment (Робоче середовище)

     Система має обслуговувати користувачів з різних країн, тому надійність, безпека та доступність є ключовими аспектами робочого середовища. Для досягнення цих цілей, ми обираємо хмарні сервіси Microsoft Azure для забезпечення безперервного доступу до системи. Azure надає високу доступність, резервне копіювання даних та захист від збоїв.
     Для забезпечення безпеки даних ми обираємо PostgreSQL як систему управління базами даних, оскільки вона відповідає вимогам GDPR із захисту даних користувачів і надає різноманітні механізми захисту, такі як ролева автентифікація та шифрування даних. Доступ до них буде здійснюватися за допомогою бібліотеки Entity Framework Core, що забезпечує високий рівень захисту та швидкість роботи.
     Управління ризиками використання обраних програмних засобів включає оцінку потенційних загроз для безпеки даних та швидкості відповіді сервера. Наприклад, ми можемо виявити ризики зв'язані з можливими атаками на сервер, і розробити план заходів для їх уникнення або зменшення наслідків.
     Також важливо розширити доступність застосунку завдяки локалізації (українська та англійська мови) та інтернаціоналізації (міри ваги, довжини тощо). Оскільки застосунок працюватиме в різних країнах, важливо врахувати різницю в часових поясах та представленні часу.
     Для розробки серверної частини буде використано технологію ASP.NET Core, що використовує мову програмування C#. Середовищем розробки буде Visual Studio. ASP.NET Core забезпечує надійність шляхом використання вбудованих механізмів перевірки даних, обробки винятків та механізмів відновлення після збоїв. Технологія володіє вбудованим механізмом керування станом, який дозволяє зберігати стан застосунку навіть після перезапуску сервера або збоїв програмного забезпечення. Крім того, ASP.NET Core надійно працює з базами даних, такими як PostgreSQL, і забезпечує високу ефективність та швидкодію за рахунок оптимізації запитів та кешування даних.
     Щодо доступності, ASP.NET використовує механізми масштабування та балансування навантаження, що дозволяють розподілити трафік між різними серверами та забезпечити безперервну доступність навіть у разі збоїв окремих компонентів. Крім того, можливість розгортання ASP.NET Core застосунків у хмарних сервісах, таких як Microsoft Azure, дозволяє забезпечити високу доступність за рахунок географічно розподілених центрів обробки даних та автоматичного масштабування ресурсів.
     Для розробки IoT частини буде використовуватися Arduino. Середовищем розробки буде Arduino IDE, мовою програмування C++. Також на Arduino буде встановлено ультразвуковий датчик відстані, динамік, GPS та Wi-Fi модулі. Встановлені модулі забезпечать точне визначення місцезнаходження та бездротовий зв'язок з сервером. Ультразвуковий датчик відстані та динамік допоможуть у виявленні перешкод та наданні звукових сигналів під час руху транспорту, що покращить безпеку та надійність IoT частини системи. Також буде забезпечено безпеку зберігання та передачі даних за допомогою шифрування та автентифікації. Механізми захисту також включають контроль доступу до пристроїв та захист від несанкціонованого доступу.
     Для розробки вебзастосунка буде використано фреймворк React.js, що використовує мову JavaScript. Середовищем розробки буде Visual Studio. Для вирішення проблем з безпекою та захистом від XSS атак під час використання фреймворку React.js, в нашій системі буде використано низку запобіжних заходів. Зокрема, будемо використовувати вбудовані можливості React для безпечної вставки даних у вебсторінки через механізми, такі як JSX (JavaScript XML) або безпечне відображення тексту через використання вбудованих методів React для очищення вхідних даних від потенційно небезпечних скриптів.
     Щодо можливих труднощів у використанні React.js для розробки асинхронних функцій, які можуть бути потрібні для взаємодії з сервером, в нашій системі ми плануємо використовувати сучасні підходи та бібліотеки для керування асинхронними запитами. Наприклад, для роботи з асинхронним кодом та виконання запитів до сервера будемо використовувати бібліотеку Axios та вбудовані можливості JavaScript, такі як асинхронні функції та ключові слова async/await, які дозволяють зручно та ефективно працювати з асинхронним кодом в React.js застосунках. Такий підхід дозволить нам забезпечити ефективну та безпечну взаємодію з сервером у нашій системі.
     Для розробки мобільної частини буде використано технологію MAUI, що використовує мову програмування C#. Середовищем розробки буде Visual Studio. У контексті вимог до швидкості відповіді сервера та надійності, фреймворк MAUI та мова програмування C# виявляються досить ефективними і надійними виборами. MAUI розширює можливості розробки мобільних застосунків, дозволяючи створювати єдиний код, який може запускатися на різних платформах, забезпечуючи одноманітність і стабільність застосунків.
     Використання мови програмування C# також сприяє швидкодії та надійності застосунків. C# має вбудовану підтримку асинхронного програмування, що дозволяє ефективно працювати з асинхронними операціями, такими як мережеві запити до сервера, без блокування основного потоку виконання, тим самим забезпечуючи швидкість відповіді застосунку.
     Щодо можливих труднощів у використанні MAUI для розробки застосунків, які мають велику кількість елементів інтерфейсу, наша система планує використовувати оптимізаційні підходи та кращі практики розробки. Наприклад, можна застосовувати віртуальну прокрутку для зменшення впливу великої кількості елементів на продуктивність застосунку. Крім того, ми будемо уникати надмірного використання анімацій та складних графічних ефектів, які можуть призвести до перевантаження системи. Також ми плануємо ретельно тестувати застосунок на різних пристроях та платформах для виявлення та виправлення можливих проблем з продуктивністю та надійністю в ранній стадії розробки. Такий підхід допоможе забезпечити ефективну та стабільну роботу застосунку, навіть при наявності великої кількості елементів інтерфейсу.
